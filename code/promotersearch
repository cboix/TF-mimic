#!/bin/bash
TARGETS=$1
OUTFILE=$2
QCBDIR=~/QCB301
REFDIR=$QCBDIR/ReferenceGenomesandAnnotations
PROMOTERS=$REFDIR/promoter_sequences.fasta
PDIR=$QCBDIR/promoters

rm -f $OUTFILE
while read -r p
do 
    eval $( echo $p | awk '{printf("GENE=%s",$1)}' )
    awk -v gene=$GENE 'BEGIN{RS="\n>";ORS="\n>"}$0 ~ gene{print $0}' $PROMOTERS >> $OUTFILE

done < $TARGETS

# MAY NEED TO put associations for complex genes
# PROMOTER file decomposition, redo if necessary
awk 'BEGIN{RS="\n>";FS="\t"}$0 !~ /\(/{ gsub(">","",$0); gsub("\x27","",$0); fname = ("/home/carles/QCB301/promoters/" $1 ".fasta"); print ">" $0 > fname}' $PROMOTERS

# Make it separate each nucleotide on a different line!
## For each fasta promoter file in QCB301/promoters: 
ls $QCBDIR/promoters > .tmpfile

while read -r p
do
    eval $( echo $p | awk '$0 ~ /fasta/{printf("fasta=%s",$1)}' )
    # NEED TO CHECK that it is not 0 size (if it isnt fasta)
    if [[ -s $fasta ]] {
        prm="${fasta%.*}"\.promoter
        awk 'BEGIN{RS="\n"; ORS=""} NR > 1{print $0}' $QCBDIR/promoters/$fasta |  perl -F, -ane ' $,=" "; print split("",$F[0])' | awk 'BEGIN{RS=" "; ORS="\n"}{print $0}' > $QCBDIR/promoters/$prm
    } fi

done < .tmpfile


# Change the header...
ls $QCBDIR/promoters > .tmpfile2
while read -r p
do
    eval $( echo $p | awk '$0 ~ /tfbs/{printf("tfbs=%s",$1)}' )
    # NEED TO CHECK that it is not 0 size (if it isnt fasta)
    if [[ -s $tfbs ]] {
        tfbs2="${tfbs%.*}"\.tfbs_2
        awk 'NR == 1{print "pwm gene start end occ iden consensus value strand"}NR > 1{print $0}' $tfbs > $tfbs2
        mv $tfbs2 $tfbs
    } fi
done < .tmpfile2
rm -f .tmpfile2

# Condense, with a threshold of 0.25
ls $PDIR > .tmpfile3
while read -r p
do
    eval $( echo $p | awk '$0 ~ /tfbs/{printf("tfbs=%s",$1)}' )
    # NEED TO CHECK that it is not 0 size (if it isnt fasta)
    if [[ -s $PDIR/$tfbs ]] {
        pcounts="${tfbs%.*}"\.pcounts
        awk '$5 > 0.25 && NR > 1 {print $1}' $PDIR/$tfbs | sort | uniq -c > $PDIR/$pcounts
    } fi
done < .tmpfile3
rm -f .tmpfile3

# NOTE the different threshold:
# Condense, with a threshold of 0.1
ls $PDIR > .tmpfile3
while read -r p
do
    eval $( echo $p | awk '$0 ~ /tfbs/{printf("tfbs=%s",$1)}' )
    # NEED TO CHECK that it is not 0 size (if it isnt fasta)
    if [[ -s $PDIR/$tfbs ]] {
        pcounts="${tfbs%.*}"\.pcounts_2
        awk '$5 > 0.1 && $0 ~ /\.pwm/ > 1 {print $1}' $PDIR/$tfbs | sort | uniq -c > $PDIR/$pcounts
    } fi
done < .tmpfile3
rm -f .tmpfile3
